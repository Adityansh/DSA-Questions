class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<Integer>();
        Stack<TreeNode> st = new Stack<>();
        
        if(root == null) return ans;
        TreeNode curr = root;
        TreeNode temp = root;
        while(curr != null || !(st.isEmpty())) {
            if(curr != null) {
                st.push(curr);
                curr = curr.left;
            }

            else {
                temp = st.peek().right;

                if(temp == null) {
                    temp = st.pop();
                    ans.add(temp.val);
                    while(!st.isEmpty() && temp == st.peek().right) {
                        temp = st.pop();
                        ans.add(temp.val);
                    }
                }
                else 
                curr = temp;
            }
        }

        return ans;
}
}
